<UserControl x:Class="HappyMail.Views.LoginView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:HappyMail.Views"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:domain="clr-namespace:HappyMail.Domain"
             xmlns:viewModels="clr-namespace:HappyMail.ViewModels"
             xmlns:config="clr-namespace:Config;assembly=MailConfig"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">
    <UserControl.DataContext>
        <viewModels:LoginViewModel />
    </UserControl.DataContext>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="50" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>
        <StackPanel Grid.Row="1" 
                    HorizontalAlignment="Center">
            <StackPanel.Style>
                <Style TargetType="StackPanel">
                    <Setter Property="Visibility" 
                            Value="Visible" />
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding Path=ConnectionState}" Value="{x:Static config:ControllerState.Connected}">
                            <Setter Property="Visibility" Value="Collapsed" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </StackPanel.Style>
            <TextBox 
                x:Name="NameTextBox" 
                Margin="0 10 0 10"
                materialDesign:HintAssist.Hint="Login" 
                Style="{StaticResource MaterialDesignFloatingHintTextBox}">
                <TextBox.Text>
                    <Binding Path="Login" UpdateSourceTrigger="PropertyChanged">
                        <Binding.ValidationRules>
                            <domain:NotEmptyValidationRule ValidatesOnTargetUpdated="True" xmlns:domain="clr-namespace:HappyMail.Domain" />
                        </Binding.ValidationRules>
                    </Binding>
                </TextBox.Text>
            </TextBox>
            <PasswordBox
                x:Name="PasswordBox"
                Margin="0 10 0 10"
                domain:PasswordBoxAssistant.BindPassword="true"  
                materialDesign:HintAssist.Hint="Password"
                materialDesign:HintAssist.Foreground="Green"
                materialDesign:TextFieldAssist.UnderlineBrush="Green"
                Style="{StaticResource MaterialDesignFloatingHintPasswordBox}" >
                <domain:PasswordBoxAssistant.BoundPassword>
                    <Binding Path="Password" UpdateSourceTrigger="PropertyChanged" Mode="TwoWay">
                        <Binding.ValidationRules>
                            <domain:NotEmptyValidationRule ValidatesOnTargetUpdated="True" xmlns:domain="clr-namespace:HappyMail.Domain" />
                        </Binding.ValidationRules>
                    </Binding>
                </domain:PasswordBoxAssistant.BoundPassword>
            </PasswordBox>
            <StackPanel 
                Orientation="Horizontal" 
                Margin="0 10 0 10">
                <ComboBox 
                    Width="90"
                    ItemsSource="{Binding Source={domain:Enumeration {x:Type config:MailServerEncryption}}}" 
                    DisplayMemberPath="Description" 
                    SelectedValue="{Binding MailServerEncryption}"  
                    SelectedValuePath="Value"
                    materialDesign:ComboBoxAssist.ShowSelectedItem="{Binding ElementName=DisplaySelectedItemCheckBox, Path=IsChecked}"
                    Margin="0 8 15 0"
                    HorizontalAlignment="Left" />
                <TextBox x:Name="ServerHost" Width="125" materialDesign:HintAssist.Hint="Server host" Style="{StaticResource MaterialDesignFloatingHintTextBox}">
                    <TextBox.Text>
                        <Binding Path="ServerHost" UpdateSourceTrigger="PropertyChanged">
                            <Binding.ValidationRules>
                                <domain:NotEmptyValidationRule ValidatesOnTargetUpdated="True" xmlns:domain="clr-namespace:HappyMail.Domain" />
                            </Binding.ValidationRules>
                        </Binding>
                    </TextBox.Text>
                </TextBox>
            </StackPanel>
            <StackPanel 
                Orientation="Horizontal" 
                Margin="0 10 0 10">
                <ComboBox 
                    Width="90"
                    ItemsSource="{Binding Source={domain:Enumeration {x:Type config:MailServerType}}}" 
                    DisplayMemberPath="Description" 
                    SelectedValue="{Binding MailServerType}"  
                    SelectedValuePath="Value"
                    materialDesign:ComboBoxAssist.ShowSelectedItem="{Binding ElementName=DisplaySelectedItemCheckBox, Path=IsChecked}"
                    Margin="0 8 15 0"
                    HorizontalAlignment="Left"/>
                <TextBox x:Name="ServerPort" Width="125" materialDesign:HintAssist.Hint="Server port" Style="{StaticResource MaterialDesignFloatingHintTextBox}">
                    <TextBox.Text>
                        <Binding Path="ServerPort" UpdateSourceTrigger="PropertyChanged">
                            <Binding.ValidationRules>
                                <domain:NotEmptyValidationRule ValidatesOnTargetUpdated="True" xmlns:domain="clr-namespace:HappyMail.Domain" />
                            </Binding.ValidationRules>
                        </Binding>
                    </TextBox.Text>
                </TextBox>
            </StackPanel>
            <StackPanel 
                Orientation="Horizontal"
                Margin="0 25 0 10">
                <Button
                    Command="{Binding Connect}"
                    Style="{StaticResource MaterialDesignRaisedLightButton}"
                    Width="90"
                    ToolTip="Connect">
                    Connect
                </Button>
            </StackPanel>
        </StackPanel>
        <StackPanel Grid.Row="1"
                    HorizontalAlignment="Center">
            <StackPanel.Style>
                <Style TargetType="StackPanel">
                    <Setter Property="Visibility" Value="Collapsed" />
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding Path=ConnectionState}" Value="{x:Static config:ControllerState.Connected}">
                            <Setter Property="Visibility" Value="Visible" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </StackPanel.Style>
            <TextBox TextAlignment="Center"
                Text="Connected"
                Style="{StaticResource MaterialDesignFloatingHintTextBox}"
                FontSize="16" />
            <Button Command="{Binding Disconnect}"
                    Style="{StaticResource MaterialDesignRaisedLightButton}"
                    Width="120"
                    ToolTip="Disconnect">
                Disconnect
            </Button>
        </StackPanel>
    </Grid>
</UserControl>
